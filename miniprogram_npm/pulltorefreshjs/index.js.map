{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["\n\nvar _shared = {\n  pullStartY: null,\n  pullMoveY: null,\n  handlers: [],\n  styleEl: null,\n  events: null,\n  dist: 0,\n  state: 'pending',\n  timeout: null,\n  distResisted: 0,\n  supportsPassive: false,\n  supportsPointerEvents: !!window.PointerEvent\n};\n\ntry {\n  window.addEventListener('test', null, {\n    get passive() {\n      // eslint-disable-line getter-return\n      _shared.supportsPassive = true;\n    }\n\n  });\n} catch (e) {// do nothing\n}\n\nfunction setupDOM(handler) {\n  if (!handler.ptrElement) {\n    var ptr = document.createElement('div');\n\n    if (handler.mainElement !== document.body) {\n      handler.mainElement.parentNode.insertBefore(ptr, handler.mainElement);\n    } else {\n      document.body.insertBefore(ptr, document.body.firstChild);\n    }\n\n    ptr.classList.add(((handler.classPrefix) + \"ptr\"));\n    ptr.innerHTML = handler.getMarkup().replace(/__PREFIX__/g, handler.classPrefix);\n    handler.ptrElement = ptr;\n\n    if (typeof handler.onInit === 'function') {\n      handler.onInit(handler);\n    } // Add the css styles to the style node, and then\n    // insert it into the dom\n\n\n    if (!_shared.styleEl) {\n      _shared.styleEl = document.createElement('style');\n\n      _shared.styleEl.setAttribute('id', 'pull-to-refresh-js-style');\n\n      document.head.appendChild(_shared.styleEl);\n    }\n\n    _shared.styleEl.textContent = handler.getStyles().replace(/__PREFIX__/g, handler.classPrefix).replace(/\\s+/g, ' ');\n  }\n\n  return handler;\n}\n\nfunction onReset(handler) {\n  handler.ptrElement.classList.remove(((handler.classPrefix) + \"refresh\"));\n  handler.ptrElement.style[handler.cssProp] = '0px';\n  setTimeout(function () {\n    // remove previous ptr-element from DOM\n    if (handler.ptrElement && handler.ptrElement.parentNode) {\n      handler.ptrElement.parentNode.removeChild(handler.ptrElement);\n      handler.ptrElement = null;\n    } // reset state\n\n\n    _shared.state = 'pending';\n  }, handler.refreshTimeout);\n}\n\nfunction update(handler) {\n  var iconEl = handler.ptrElement.querySelector((\".\" + (handler.classPrefix) + \"icon\"));\n  var textEl = handler.ptrElement.querySelector((\".\" + (handler.classPrefix) + \"text\"));\n\n  if (iconEl) {\n    if (_shared.state === 'refreshing') {\n      iconEl.innerHTML = handler.iconRefreshing;\n    } else {\n      iconEl.innerHTML = handler.iconArrow;\n    }\n  }\n\n  if (textEl) {\n    if (_shared.state === 'releasing') {\n      textEl.innerHTML = handler.instructionsReleaseToRefresh;\n    }\n\n    if (_shared.state === 'pulling' || _shared.state === 'pending') {\n      textEl.innerHTML = handler.instructionsPullToRefresh;\n    }\n\n    if (_shared.state === 'refreshing') {\n      textEl.innerHTML = handler.instructionsRefreshing;\n    }\n  }\n}\n\nvar _ptr = {\n  setupDOM: setupDOM,\n  onReset: onReset,\n  update: update\n};\n\nvar _timeout;\n\nvar screenY = function screenY(event) {\n  if (_shared.pointerEventsEnabled && _shared.supportsPointerEvents) {\n    return event.screenY;\n  }\n\n  return event.touches[0].screenY;\n};\n\nvar _setupEvents = (function () {\n  var _el;\n\n  function _onTouchStart(e) {\n    // here, we must pick a handler first, and then append their html/css on the DOM\n    var target = _shared.handlers.filter(function (h) { return h.contains(e.target); })[0];\n\n    _shared.enable = !!target;\n\n    if (target && _shared.state === 'pending') {\n      _el = _ptr.setupDOM(target);\n\n      if (target.shouldPullToRefresh()) {\n        _shared.pullStartY = screenY(e);\n      }\n\n      clearTimeout(_shared.timeout);\n\n      _ptr.update(target);\n    }\n  }\n\n  function _onTouchMove(e) {\n    if (!(_el && _el.ptrElement && _shared.enable)) {\n      return;\n    }\n\n    if (!_shared.pullStartY) {\n      if (_el.shouldPullToRefresh()) {\n        _shared.pullStartY = screenY(e);\n      }\n    } else {\n      _shared.pullMoveY = screenY(e);\n    }\n\n    if (_shared.state === 'refreshing') {\n      if (e.cancelable && _el.shouldPullToRefresh() && _shared.pullStartY < _shared.pullMoveY) {\n        e.preventDefault();\n      }\n\n      return;\n    }\n\n    if (_shared.state === 'pending') {\n      _el.ptrElement.classList.add(((_el.classPrefix) + \"pull\"));\n\n      _shared.state = 'pulling';\n\n      _ptr.update(_el);\n    }\n\n    if (_shared.pullStartY && _shared.pullMoveY) {\n      _shared.dist = _shared.pullMoveY - _shared.pullStartY;\n    }\n\n    _shared.distExtra = _shared.dist - _el.distIgnore;\n\n    if (_shared.distExtra > 0) {\n      if (e.cancelable) {\n        e.preventDefault();\n      }\n\n      _el.ptrElement.style[_el.cssProp] = (_shared.distResisted) + \"px\";\n      _shared.distResisted = _el.resistanceFunction(_shared.distExtra / _el.distThreshold) * Math.min(_el.distMax, _shared.distExtra);\n\n      if (_shared.state === 'pulling' && _shared.distResisted > _el.distThreshold) {\n        _el.ptrElement.classList.add(((_el.classPrefix) + \"release\"));\n\n        _shared.state = 'releasing';\n\n        _ptr.update(_el);\n      }\n\n      if (_shared.state === 'releasing' && _shared.distResisted < _el.distThreshold) {\n        _el.ptrElement.classList.remove(((_el.classPrefix) + \"release\"));\n\n        _shared.state = 'pulling';\n\n        _ptr.update(_el);\n      }\n    }\n  }\n\n  function _onTouchEnd() {\n    if (!(_el && _el.ptrElement && _shared.enable)) {\n      return;\n    } // wait 1/2 sec before unmounting...\n\n\n    clearTimeout(_timeout);\n    _timeout = setTimeout(function () {\n      if (_el && _el.ptrElement && _shared.state === 'pending') {\n        _ptr.onReset(_el);\n      }\n    }, 500);\n\n    if (_shared.state === 'releasing' && _shared.distResisted > _el.distThreshold) {\n      _shared.state = 'refreshing';\n      _el.ptrElement.style[_el.cssProp] = (_el.distReload) + \"px\";\n\n      _el.ptrElement.classList.add(((_el.classPrefix) + \"refresh\"));\n\n      _shared.timeout = setTimeout(function () {\n        var retval = _el.onRefresh(function () { return _ptr.onReset(_el); });\n\n        if (retval && typeof retval.then === 'function') {\n          retval.then(function () { return _ptr.onReset(_el); });\n        }\n\n        if (!retval && !_el.onRefresh.length) {\n          _ptr.onReset(_el);\n        }\n      }, _el.refreshTimeout);\n    } else {\n      if (_shared.state === 'refreshing') {\n        return;\n      }\n\n      _el.ptrElement.style[_el.cssProp] = '0px';\n      _shared.state = 'pending';\n    }\n\n    _ptr.update(_el);\n\n    _el.ptrElement.classList.remove(((_el.classPrefix) + \"release\"));\n\n    _el.ptrElement.classList.remove(((_el.classPrefix) + \"pull\"));\n\n    _shared.pullStartY = _shared.pullMoveY = null;\n    _shared.dist = _shared.distResisted = 0;\n  }\n\n  function _onScroll() {\n    if (_el) {\n      _el.mainElement.classList.toggle(((_el.classPrefix) + \"top\"), _el.shouldPullToRefresh());\n    }\n  }\n\n  var _passiveSettings = _shared.supportsPassive ? {\n    passive: _shared.passive || false\n  } : undefined;\n\n  if (_shared.pointerEventsEnabled && _shared.supportsPointerEvents) {\n    window.addEventListener('pointerup', _onTouchEnd);\n    window.addEventListener('pointerdown', _onTouchStart);\n    window.addEventListener('pointermove', _onTouchMove, _passiveSettings);\n  } else {\n    window.addEventListener('touchend', _onTouchEnd);\n    window.addEventListener('touchstart', _onTouchStart);\n    window.addEventListener('touchmove', _onTouchMove, _passiveSettings);\n  }\n\n  window.addEventListener('scroll', _onScroll);\n  return {\n    onTouchEnd: _onTouchEnd,\n    onTouchStart: _onTouchStart,\n    onTouchMove: _onTouchMove,\n    onScroll: _onScroll,\n\n    destroy: function destroy() {\n      if (_shared.pointerEventsEnabled && _shared.supportsPointerEvents) {\n        window.removeEventListener('pointerdown', _onTouchStart);\n        window.removeEventListener('pointerup', _onTouchEnd);\n        window.removeEventListener('pointermove', _onTouchMove, _passiveSettings);\n      } else {\n        window.removeEventListener('touchstart', _onTouchStart);\n        window.removeEventListener('touchend', _onTouchEnd);\n        window.removeEventListener('touchmove', _onTouchMove, _passiveSettings);\n      }\n\n      window.removeEventListener('scroll', _onScroll);\n    }\n\n  };\n});\n\nvar _ptrMarkup = \"\\n<div class=\\\"__PREFIX__box\\\">\\n  <div class=\\\"__PREFIX__content\\\">\\n    <div class=\\\"__PREFIX__icon\\\"></div>\\n    <div class=\\\"__PREFIX__text\\\"></div>\\n  </div>\\n</div>\\n\";\n\nvar _ptrStyles = \"\\n.__PREFIX__ptr {\\n  box-shadow: inset 0 -3px 5px rgba(0, 0, 0, 0.12);\\n  pointer-events: none;\\n  font-size: 0.85em;\\n  font-weight: bold;\\n  top: 0;\\n  height: 0;\\n  transition: height 0.3s, min-height 0.3s;\\n  text-align: center;\\n  width: 100%;\\n  overflow: hidden;\\n  display: flex;\\n  align-items: flex-end;\\n  align-content: stretch;\\n}\\n\\n.__PREFIX__box {\\n  padding: 10px;\\n  flex-basis: 100%;\\n}\\n\\n.__PREFIX__pull {\\n  transition: none;\\n}\\n\\n.__PREFIX__text {\\n  margin-top: .33em;\\n  color: rgba(0, 0, 0, 0.3);\\n}\\n\\n.__PREFIX__icon {\\n  color: rgba(0, 0, 0, 0.3);\\n  transition: transform .3s;\\n}\\n\\n/*\\nWhen at the top of the page, disable vertical overscroll so passive touch\\nlisteners can take over.\\n*/\\n.__PREFIX__top {\\n  touch-action: pan-x pan-down pinch-zoom;\\n}\\n\\n.__PREFIX__release .__PREFIX__icon {\\n  transform: rotate(180deg);\\n}\\n\";\n\nvar _defaults = {\n  distThreshold: 60,\n  distMax: 80,\n  distReload: 50,\n  distIgnore: 0,\n  mainElement: 'body',\n  triggerElement: 'body',\n  ptrElement: '.ptr',\n  classPrefix: 'ptr--',\n  cssProp: 'min-height',\n  iconArrow: '&#8675;',\n  iconRefreshing: '&hellip;',\n  instructionsPullToRefresh: 'Pull down to refresh',\n  instructionsReleaseToRefresh: 'Release to refresh',\n  instructionsRefreshing: 'Refreshing',\n  refreshTimeout: 500,\n  getMarkup: function () { return _ptrMarkup; },\n  getStyles: function () { return _ptrStyles; },\n  onInit: function () {},\n  onRefresh: function () { return location.reload(); },\n  resistanceFunction: function (t) { return Math.min(1, t / 2.5); },\n  shouldPullToRefresh: function () { return !window.scrollY; }\n};\n\nvar _methods = ['mainElement', 'ptrElement', 'triggerElement'];\nvar _setupHandler = (function (options) {\n  var _handler = {}; // merge options with defaults\n\n  Object.keys(_defaults).forEach(function (key) {\n    _handler[key] = options[key] || _defaults[key];\n  }); // normalize timeout value, even if it is zero\n\n  _handler.refreshTimeout = typeof options.refreshTimeout === 'number' ? options.refreshTimeout : _defaults.refreshTimeout; // normalize elements\n\n  _methods.forEach(function (method) {\n    if (typeof _handler[method] === 'string') {\n      _handler[method] = document.querySelector(_handler[method]);\n    }\n  }); // attach events lazily\n\n\n  if (!_shared.events) {\n    _shared.events = _setupEvents();\n  }\n\n  _handler.contains = function (target) {\n    return _handler.triggerElement.contains(target);\n  };\n\n  _handler.destroy = function () {\n    // stop pending any pending callbacks\n    clearTimeout(_shared.timeout); // remove handler from shared state\n\n    var offset = _shared.handlers.indexOf(_handler);\n\n    _shared.handlers.splice(offset, 1);\n  };\n\n  return _handler;\n});\n\nvar index = {\n  setPassiveMode: function setPassiveMode(isPassive) {\n    _shared.passive = isPassive;\n  },\n\n  setPointerEventsMode: function setPointerEventsMode(isEnabled) {\n    _shared.pointerEventsEnabled = isEnabled;\n  },\n\n  destroyAll: function destroyAll() {\n    if (_shared.events) {\n      _shared.events.destroy();\n\n      _shared.events = null;\n    }\n\n    _shared.handlers.forEach(function (h) {\n      h.destroy();\n    });\n  },\n\n  init: function init(options) {\n    if ( options === void 0 ) options = {};\n\n    var handler = _setupHandler(options);\n\n    _shared.handlers.push(handler);\n\n    return handler;\n  },\n\n  // export utils for testing\n  _: {\n    setupHandler: _setupHandler,\n    setupEvents: _setupEvents,\n    setupDOM: _ptr.setupDOM,\n    onReset: _ptr.onReset,\n    update: _ptr.update\n  }\n};\n\nmodule.exports = index;\n"]}